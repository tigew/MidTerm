abstract class
A class with the abstract reserved word in its header.

accessor method
A method specifically designed to provide access to a private attribute of a class.

actual argument
The value of an argument passed to a method from outside the method.

argument
Information passed to a method.

arithmetic operator
Operators, such as +, -, *, / and %, that produce a numerical result, as part of an arithmetic expression.

array
A fixed-size object that can hold zero or more items of the array's declared type.

assignment operator
The operator (=) used to store the value of an expression into a variable.

base type
The type of items which may be stored in an array - the array's defined type.

block
Statements and declarations enclosed between a matching pair of curly brackets ({ and }).

boolean
One of Java's primitive types. The boolean type has only two values: true and false.

boolean expression
An expression whose result is of type boolean.

bounds
The limits of an array or collection.

bytecode
Java source files are translated by a compiler into bytecodes.

class
A programming language concept that allows data and methods to be grouped together.

class constant
A variable defined as both final and static.

class header
The header of a class definition.

class method
A synonym for static method.

cohesion
The extent to which a component performs a single well-defined task.

command-line argument
Arguments passed to a program when it is run.

compilation
The process of translating a programming language. 

control structure
A statement that affects the flow of control within a method. Typical control structures are loops and if statements.

data type
Another word for variable type.

declaration and initialization
A statement in which a variable is declared and immediately given its initial value.

default initial value
The default value of any variable not explicitly initialized when it is declared.

deprecated
Something that has been made obsolete by later versions of the API.

encapsulation
Safeguarding the state of an objects by defining its attributes as private and channeling access to them through accessor and mutator methods.

field
Variables defined inside a class or interface, outside of the methods. Fields are members of a class.

formal argument
The definition of a method's argument which are part of a method header.

identifier
A programmer-defined name for a variable, method, class or interface.

immutable object
An object whose state may not be changed.

increment operator
An operator (++) that adds one to its operand.

instance
A synonym for object. Objects of a class are instantiated when a class constructor is invoked via the new operator.

instantiation
The creation of an instance of a class - that is, an object.

iteration
Repetition of a set of statements, usually using a looping control structure, such as a while loop, for loop or do loop.

local variable
A variable defined inside a method body.

logical operators
Operators, such as &&, ||, &, | and ^ that take two boolean operands and produce a boolean result.

loop variable
A variable used to control the operation of a loop.

magic number
A constant value with a significance within a particular context.

main method
The starting point for program execution

method header
The header of a method, consisting of the method name, its result type, formal arguments and any exceptions thrown. Also known as a method signature.

method overloading
Two or more methods with the same name defined within a class are said to be overloaded.

new operator
The operator used to create instances {instance} of a class.

object
An instance of a particular class.

object construction
The creation of an object, usually via the new operator.

object serialization
The writing of an object's contents in such a way that its state can be restored.

package
A named grouping of classes and interfaces that provides a package namespace.

primitive type
Java's eight standard non-class types are primitive types: boolean, byte, char, double, float, int, long and short.

return type
The declared type of a method.

syntax error
An error detected by the compiler during its parsing of a program. 

white space
Characters used to create visual spacing within a program.